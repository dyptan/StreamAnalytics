<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <name>streamer</name>

    <parent>
        <artifactId>parent</artifactId>
        <groupId>com.dyptan</groupId>
        <version>1.0</version>
    </parent>

    <groupId>com.dyptan</groupId>
    <artifactId>predictor</artifactId>
    <packaging>jar</packaging>
    <version>1.5-SNAPSHOT</version>

    <dependencyManagement>
        <dependencies>
            <!--Spark bring newer Janino lib 3.1 which is incompatible and
            causes this java.lang.NoClassDefFoundError: org/codehaus/janino/InternalCompilerException
            Need to lower the lib version to resolve it-->
            <dependency>
                <groupId>org.codehaus.janino</groupId>
                <artifactId>commons-compiler</artifactId>
                <version>3.0.16</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.janino</groupId>
                <artifactId>janino</artifactId>
                <version>3.0.16</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!--Scala Tests-->
<!--        <dependency>-->
<!--            <groupId>org.scalatest</groupId>-->
<!--            <artifactId>scalatest_${scala.major.version}</artifactId>-->
<!--            <version>3.0.5</version>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->

        <!--Junit-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--Spark-->
         <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.major.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming-kafka-0-10_${scala.major.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql-kafka-0-10_${scala.major.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_${scala.major.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <!--GRPC-->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency> <!-- necessary for Java 9+ -->
            <groupId>org.apache.tomcat</groupId>
            <artifactId>annotations-api</artifactId>
            <version>6.0.53</version>
            <scope>provided</scope>
        </dependency>

        <!--Spark HDFS-->
<!--        <dependency>-->
<!--            <groupId>org.apache.hadoop</groupId>-->
<!--            <artifactId>hadoop-common</artifactId>-->
<!--            <version>${hadoop.version}</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.apache.hadoop</groupId>-->
<!--            <artifactId>hadoop-mapreduce-client-core</artifactId>-->
<!--            <version>${hadoop.version}</version>-->
<!--        </dependency>-->

        <!--Mongo-->
        <dependency>
            <groupId>org.mongodb.spark</groupId>
            <artifactId>mongo-spark-connector_2.13</artifactId>
            <version>10.1.1</version>
        </dependency>

        <!--Elasticsearch-->
<!--        <dependency>-->
<!--            <groupId>org.elasticsearch</groupId>-->
<!--            <artifactId>elasticsearch-hadoop</artifactId>-->
<!--            <version>${elasticsearch.version}</version>-->
<!--        </dependency>-->

    </dependencies>

            <build>
                <extensions>
                    <extension>
                        <groupId>kr.motd.maven</groupId>
                        <artifactId>os-maven-plugin</artifactId>
                        <version>1.6.1</version>
                    </extension>
                 </extensions>
                <plugins>
                    <plugin>
                        <groupId>org.xolstice.maven.plugins</groupId>
                        <artifactId>protobuf-maven-plugin</artifactId>
                        <version>0.6.1</version>
                        <configuration>
                            <!--suppress UnresolvedMavenProperty -->
                            <protocArtifact>
                                com.google.protobuf:protoc:3.3.0:exe:${os.detected.classifier}
                            </protocArtifact>
                            <pluginId>grpc-java</pluginId>
                            <!--suppress UnresolvedMavenProperty -->
                            <pluginArtifact>
                                io.grpc:protoc-gen-grpc-java:1.4.0:exe:${os.detected.classifier}
                            </pluginArtifact>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>compile</goal>
                                    <goal>compile-custom</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <configuration>
                            <outputDirectory>${basedir}/target/dist</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/conf/</directory>
                                </resource>
                                <resource>
                                    <directory>${project.parent.basedir}/model/</directory>
                                </resource>
                            </resources>
                        </configuration>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/dist/lib</outputDirectory>
                                    <overWriteReleases>false</overWriteReleases>
                                    <overWriteSnapshots>false</overWriteSnapshots>
                                    <overWriteIfNewer>true</overWriteIfNewer>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <classpathPrefix>lib/</classpathPrefix>
                                    <mainClass>com.dyptan.StreamDriver</mainClass>
                                </manifest>
                                <manifestEntries>
                                    <Class-Path>.</Class-Path>
                                </manifestEntries>
                            </archive>
                            <finalName>dist/StreamTransformer</finalName>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
</project>