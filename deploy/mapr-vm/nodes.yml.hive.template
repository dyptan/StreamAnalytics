---
- hosts: "{{ hostname }}"
  remote_user: mapr
  sudo: yes

  vars:
    mode: yarn
    mapr_core_repo: "{{ mapr_core[ansible_os_family][mapr_version] }}"
    mapr_eco_repo: "{{ mapr_eco[ansible_os_family][mapr_eco_version] }}"
    mapr_patch_repo: "{{ mapr_patch[ansible_os_family][mapr_version] }}"
    java_version: openjdk8 # available values: openjdk7 / openjdk8
    add_license: true
    set_mapr_subnets: false # Useful to connect from Docker

    databases:
      mysql:    { host: [ ] }
      mariadb:  { host: [node1 ] }
      postgres: { host: [ ] }
      mongo:    { host: [ ] }

    packages_core:
      cldb:                { package: "mapr-cldb",                host: [ node1 ] }
      fileserver:          { package: "mapr-fileserver",          host: [ node1 ] }
      zookeeper:           { package: "mapr-zookeeper",           host: [ node1 ] }
      historyserver:       { package: "mapr-historyserver",       host: [ node1 ] }
      resourcemanager:     { package: "mapr-resourcemanager",     host: [ node1 ] }
      nodemanager:         { package: "mapr-nodemanager",         host: [ node1 ] }
      timelineserver:      { package: "mapr-timelineserver",      host: [ ] }
      webserver:           { package: "mapr-webserver",           host: [ node1 ] }
      jobtracker:          { package: "mapr-jobtracker",          host: [ ] }
      tasktracker:         { package: "mapr-tasktracker",         host: [ ] }
      client:              { package: "mapr-client",              host: [ ] }

    packages_eco:
      hbase:               { package: "mapr-hbase",               host: [ node1 ] }
      hbase_master:        { package: "mapr-hbase-master",        host: [ node1 ] }
      hbase_regionserver:  { package: "mapr-hbase-regionserver",  host: [ node1 ] }
      hbase_rest:          { package: "mapr-hbase-rest",          host: [ ] }
      hbasethrift:         { package: "mapr-hbasethrift",         host: [ node1 ] }
      spark:               { package: "mapr-spark",               host: [ ], use_for_hive: true, use_for_mesos: true }
      spark_historyserver: { package: "mapr-spark-historyserver", host: [ ] }
      spark_master:        { package: "mapr-spark-master",        host: [ ] }
      spark_thriftserver:  { package: "mapr-spark-thriftserver",  host: [ ] }
      hue_livy:            { package: "mapr-hue-livy",            host: [ ] }
      kafka:               { package: "mapr-kafka",               host: [ ] }
      tez:                 { package: "mapr-tez",                 host: [ node1 ] }
      hive:                { package: "mapr-hive",                host: [ node1 ] }
      hiveserver2:         { package: "mapr-hiveserver2",         host: [ node1 ] }
      hivemetastore:       { package: "mapr-hivemetastore",       host: [ node1 ] }
      hivewebhcat:         { package: "mapr-hivewebhcat",         host: [ node1 ] }
      impala:              { package: "mapr-impala",              host: [ ] }
      impala_server:       { package: "mapr-impala-server",       host: [ ] }
      impala_statestore:   { package: "mapr-impala-statestore",   host: [ ] }
      impala_catalog:      { package: "mapr-impala-catalog",      host: [ ] }
      hue:                 { package: "mapr-hue",                 host: [ ] }
      httpfs:              { package: "mapr-httpfs",              host: [ ] }
      oozie:               { package: "mapr-oozie",               host: [ ] }
      oozie_internal:      { package: "mapr-oozie-internal",      host: [ ] }
      pig:                 { package: "mapr-pig",                 host: [ node1 ] }
      # WARNING: don't install mapr-sqoop2 with mapr-sqoop
      sqoop2_client:       { package: "mapr-sqoop2-client",       host: [ ] }
      sqoop2_server:       { package: "mapr-sqoop2-server",       host: [ ] }
      sqoop:               { package: "mapr-sqoop",               host: [ node1 ] }
      sentry:              { package: "mapr-sentry",              host: [ ], use_for_hive: true, use_for_impala: true }
      schema_registry:     { package: "mapr-schema-registry",     host: [ ] }
      flume:               { package: "mapr-flume",               host: [ ] }
      drill:               { package: "mapr-drill",               host: [ ] }
      mahout:              { package: "mapr-mahout",              host: [ ] }

    third_party:
      mesos:               { host: [ ] }

  roles:
    - mapr-repo
    - setup-initial
    - setup-database
    #- setup-ldap
    - mapr-base

    - install-third-party

    - role: install-mapr-ecosystem
      when: hostname not in packages_core.client.host

    - role: mapr-kerberos
      when: security == "kerberos"

    - role: mapr-configure
      when: hostname not in packages_core.client.host

    - role: run-configure-sh
      when: hostname not in packages_core.client.host

    - role: run-configure-sh-on-client
      when: hostname in packages_core.client.host

    - role: mapr-post-configure
      when: hostname not in packages_core.client.host

    #- hive-tests
    #- spark-tests

    - role: mapr-post-configure-on-client
      when: hostname in packages_core.client.host
