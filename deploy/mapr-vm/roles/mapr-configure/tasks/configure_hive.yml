---
# ********************
# *** HIVE section ***
# ********************

- name: Find Hive dir
  shell: ls -d /opt/mapr/hive/hive-*
  register: hive_dir

- name: Copy hive-site.xml
  template: src=hive/hive-site.xml.{{security}} dest={{ hive_dir.stdout }}/conf/hive-site.xml


- name: Find Tez dir
  shell: ls -d /opt/mapr/tez/tez-*
  register: tez_dir
  when: hostname in packages_eco.tez.host

- name: Ensure that hive-env.sh exists (required to configure Hive on Tez)
  command: "cp -n {{ hive_dir.stdout }}/conf/hive-env.sh.template {{ hive_dir.stdout }}/conf/hive-env.sh"
  when: hostname in packages_eco.tez.host

- name: Add Tez configuration into hive-env.sh
  blockinfile:
    dest: "{{ hive_dir.stdout }}/conf/hive-env.sh"
    marker: "\n### {mark} ANSIBLE MANAGED BLOCK ###\n"
    block: |
      export TEZ_CONF_DIR="{{ tez_dir.stdout }}/conf"
      export TEZ_JARS="{{ tez_dir.stdout }}/*:{{ tez_dir.stdout }}/lib/*"
      export HADOOP_CLASSPATH="$TEZ_CONF_DIR:$TEZ_JARS:$HADOOP_CLASSPATH"
  when: hostname in packages_eco.tez.host


- name: Create Hive metastore
  command: "{{ hive_dir.stdout }}/bin/schematool -initSchema -dbType mysql"
  when: (databases.mysql.host or databases.mariadb.host) and (hostname == packages_eco.hivemetastore.host|first_host)
  ignore_errors: true
