---
# ********************
# ** Sqoop section ***
# ********************

- name: Copy create_test_db_for_sqoop.sql
  template: src=sqoop/create_test_db_for_sqoop.sql.j2 dest=/tmp/create_test_db_for_sqoop.sql

- name: Add test database to mysql
  shell: "mysql -uroot -p{{ database_root_password }} < /tmp/create_test_db_for_sqoop.sql"
  ignore_errors: true

#========= SIMPLE =========
- name: sqoop.properties -> uncomment SIMPLE authentication
  lineinfile: >
              dest={{ sqoop_conf_dir.stdout }}/sqoop.properties
              regexp="^#org.apache.sqoop.security.authentication.type=SIMPLE"
              line="org.apache.sqoop.security.authentication.type=SIMPLE"
  sudo: yes
  when: (security == "none")
  ignore_errors: true

- name: sqoop.properties -> Sqoop2 / uncomment SimpleAuthenticationHandler
  lineinfile: >
              dest={{ sqoop_conf_dir.stdout }}/sqoop.properties
              regexp="^#org.apache.sqoop.security.authentication.handler=org.apache.sqoop.security.authentication.SimpleAuthenticationHandler"
              line="org.apache.sqoop.security.authentication.handler=org.apache.sqoop.security.authentication.SimpleAuthenticationHandler"
  sudo: yes
  when: (security == "none")
  ignore_errors: true
#===========================

#========= MAPRSASL =========
- name: sqoop.properties -> uncomment CUSTOM authentication
  lineinfile: >
              dest={{ sqoop_conf_dir.stdout }}/sqoop.properties
              regexp="^#org.apache.sqoop.security.authentication.type=CUSTOM"
              line="org.apache.sqoop.security.authentication.type=CUSTOM"
  sudo: yes
  when: (security == "maprsasl")
  ignore_errors: true

- name: sqoop.properties -> Sqoop2 / uncomment MultiMechsAuthenticationHandler
  lineinfile: >
              dest={{ sqoop_conf_dir.stdout }}/sqoop.properties
              regexp="^#org.apache.sqoop.security.authentication.custom_handler=org.apache.hadoop.security.authentication.server.MultiMechsAuthenticationHandler"
              line="org.apache.sqoop.security.authentication.custom_handler=org.apache.hadoop.security.authentication.server.MultiMechsAuthenticationHandler"
  sudo: yes
  when: (security == "maprsasl")
  ignore_errors: true
#===========================

#========= KERBEROS =========
- name: sqoop.properties -> uncomment KERBEROS authentication
  lineinfile: >
              dest={{ sqoop_conf_dir.stdout }}/sqoop.properties
              regexp="^#org.apache.sqoop.security.authentication.type=KERBEROS"
              line="org.apache.sqoop.security.authentication.type=KERBEROS"
  sudo: yes
  when: (security == "kerberos")
  ignore_errors: true

- name: sqoop.properties -> Sqoop2 / uncomment KerberosAuthenticationHandler
  lineinfile: >
              dest={{ sqoop_conf_dir.stdout }}/sqoop.properties
              regexp="^#org.apache.sqoop.security.authentication.handler=org.apache.sqoop.security.authentication.KerberosAuthenticationHandler"
              line="org.apache.sqoop.security.authentication.handler=org.apache.sqoop.security.authentication.KerberosAuthenticationHandler"
  sudo: yes
  when: (security == "kerberos")
  ignore_errors: true

- name: sqoop.properties -> Sqoop2 / set Mapr Kerberos principal
  lineinfile: >
              dest={{ sqoop_conf_dir.stdout }}/sqoop.properties
              regexp="^#org.apache.sqoop.security.authentication.kerberos.principal=.*"
              line="org.apache.sqoop.security.authentication.kerberos.principal={{ packages_eco.sqoop2_server.host|first_host('_HOST')|pick(fqdns)|mkprinc(mapr_host_principal) }}"
  sudo: yes
  when: (security == "kerberos")
  ignore_errors: true

- name: sqoop.properties -> Sqoop2 / set Mapr Kerberos keytab
  lineinfile: >
              dest={{ sqoop_conf_dir.stdout }}/sqoop.properties
              regexp="^#org.apache.sqoop.security.authentication.kerberos.keytab=.*"
              line="org.apache.sqoop.security.authentication.kerberos.keytab=/opt/mapr/conf/mapr.keytab"
  sudo: yes
  when: (security == "kerberos")
  ignore_errors: true

- name: sqoop.properties -> Sqoop2 / set HTTP Kerberos principal
  lineinfile: >
              dest={{ sqoop_conf_dir.stdout }}/sqoop.properties
              regexp="^#org.apache.sqoop.security.authentication.kerberos.http.principal=.*"
              line="org.apache.sqoop.security.authentication.kerberos.http.principal={{ packages_eco.sqoop2_server.host|first_host('_HOST')|pick(fqdns)|mkprinc(http_host_principal) }}"
  sudo: yes
  when: (security == "kerberos")
  ignore_errors: true

- name: sqoop.properties -> Sqoop2 / set HTTP Kerberos keytab
  lineinfile: >
              dest={{ sqoop_conf_dir.stdout }}/sqoop.properties
              regexp="^#org.apache.sqoop.security.authentication.kerberos.http.keytab=.*"
              line="org.apache.sqoop.security.authentication.kerberos.http.keytab=/opt/mapr/conf/mapr.keytab"
  sudo: yes
  when: (security == "kerberos")
  ignore_errors: true

- name: sqoop.properties -> Sqoop2 / enable doAs
  lineinfile: >
              dest={{ sqoop_conf_dir.stdout }}/sqoop.properties
              regexp="^#org.apache.sqoop.security.authentication.enable.doAs=.*"
              line="org.apache.sqoop.security.authentication.enable.doAs=true"
  sudo: yes
  when: (security == "kerberos")
  ignore_errors: true

- name: sqoop.properties -> Sqoop2 / set proxyuser users
  lineinfile: >
              dest={{ sqoop_conf_dir.stdout }}/sqoop.properties
              regexp="^#org.apache.sqoop.security.authentication.proxyuser.#USER#.users=.*"
              line="org.apache.sqoop.security.authentication.proxyuser.mapr.users=*"
  sudo: yes
  when: (security == "kerberos")
  ignore_errors: true

- name: sqoop.properties -> Sqoop2 / set proxyuser groups
  lineinfile: >
              dest={{ sqoop_conf_dir.stdout }}/sqoop.properties
              regexp="^#org.apache.sqoop.security.authentication.proxyuser.#USER#.groups=.*"
              line="org.apache.sqoop.security.authentication.proxyuser.mapr.groups=*"
  sudo: yes
  when: (security == "kerberos")
  ignore_errors: true

- name: sqoop.properties -> Sqoop2 / set proxyuser hosts
  lineinfile: >
              dest={{ sqoop_conf_dir.stdout }}/sqoop.properties
              regexp="^#org.apache.sqoop.security.authentication.proxyuser.#USER#.hosts=.*"
              line="org.apache.sqoop.security.authentication.proxyuser.mapr.hosts=*"
  sudo: yes
  when: (security == "kerberos")
  ignore_errors: true
#===========================
