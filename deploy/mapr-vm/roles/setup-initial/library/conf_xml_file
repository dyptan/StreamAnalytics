#!/usr/bin/python


from xml.etree import ElementTree as ET

from ansible.module_utils.basic import *


def make_property(name, value):
  new_prop = ET.Element("property")
  name_elem = ET.Element("name")
  name_elem.text = name
  value_elem = ET.Element("value")
  value_elem.text = value
  new_prop.append(name_elem)
  new_prop.append(value_elem)
  return new_prop


def update_or_insert(root, name, value):
  properties = root.findall('property')
  for prop in properties:
    prop_name = prop.find("name")
    prop_value = prop.find("value")
    if prop_name is not None and prop_name.text != name:
      continue
    prop_value.text = str(value).strip()
    return
  root.append(make_property(name, value))


def main():
  module = AnsibleModule(
    argument_spec=dict(
      xml_file=dict(required=True),
      property_name=dict(required=True),
      value=dict(required=True)
    )
  )
  params = module.params
  xml_file = params["xml_file"]
  property_name = params["property_name"]
  property_value = params["value"]

  if not os.path.isfile(xml_file):
    module.fail_json(msg="Target file '%s' not exists" % (xml_file,))

  shutil.copyfile(xml_file, '%s.bak-%s' % (xml_file, time.strftime("%X")))

  try:
    tree = ET.parse(xml_file)
  except ET.XMLSyntaxError:
    module.fail_json(msg="Failed to parse file '%s'" % (xml_file,))

  root = tree.getroot()
  update_or_insert(root, property_name, property_value)

  tree.write(xml_file)

  module.exit_json(changed=True)

main()