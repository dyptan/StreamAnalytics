---
    # Install packages

  - name: Install PostgreSQL [Debian]
    apt: name={{ item }}
    with_items:
      - postgresql
      - python-psycopg2
    when: ansible_os_family in ['Debian']

  - name: Install PostgreSQL [RedHat]
    yum: name={{ item }}
    with_items:
      - postgresql-server
      - python-psycopg2
    when: ansible_os_family in ['RedHat']

  - name: Install PostgreSQL [Suse]
    zypper: name={{ item }}
    with_items:
      - postgresql-devel
      - postgresql-server
      - python-setuptools
    when: ansible_os_family in ['Suse']

  - name: Insall Ansible requirements for PostgreSQL [Suse]
    command: easy_install psycopg2
    when: ansible_os_family in ['Suse']


    # Init database. Does not needed for Debian.

  - name: InitDB for PostgreSQL [RedHat]
    command: initdb
    become: yes
    become_user: postgres
    become_method: sudo
    become_flags: '-i'
    when: ansible_os_family in ['RedHat']


    # Start service and set admin account password

  - name: Start PostgreSQL service
    service: name=postgresql state=restarted enabled=yes

  - name: Set password for postgres user
    postgresql_user: name=postgres password={{ database_root_password }}
    become: true
    become_user: postgres


    # Explicitly set default host/port and change login method

  - find: patterns="postgresql.conf" paths="/var/lib/pgsql/data,/etc/postgresql/9.3/main,/etc/postgresql/9.5/main"
    register: postgresql_conf_path

  - name: Allow remote access for PostgreSQL
    lineinfile: dest="{{ item.path }}" regexp="^#listen_addresses.*" line="listen_addresses='*'"
    with_items: "{{ postgresql_conf_path.files }}"

  - find: patterns="pg_hba.conf" paths="/var/lib/pgsql/data,/etc/postgresql/9.3/main,/etc/postgresql/9.5/main"
    register: pg_hba_conf_path

  - name: Remove all default login methods for PostgreSQL
    replace: dest="{{ item.path }}" regexp="^([^#].*)$" replace="## \1"
    with_items: "{{ pg_hba_conf_path.files }}"

  - name: Change login method for PostgreSQL
    blockinfile:
        dest: "{{ item.path }}"
        block: |
            local all all           md5
            host  all all 0.0.0.0/0 md5
            host  all all ::0/0     md5
    with_items: "{{ pg_hba_conf_path.files }}"

  - name: Restart PostgreSQL service with new configuration
    service: name=postgresql state=restarted
